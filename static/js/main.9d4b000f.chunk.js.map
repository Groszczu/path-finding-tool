{"version":3,"sources":["shared/ResizableGrid.js","shared/Keyframes.js","features/nodes/NodeTypes.js","features/nodes/Node.jsx","features/nodes/nodeHelpers.js","features/nodes/nodesSlice.js","util/algorithms/heuristics.js","util/algorithms/aStar.js","util/algorithms/dijkstra.js","util/algorithms/greedy.js","util/algorithms/algorithmId.js","features/tools/toolsSlice.js","features/tools/useDrawToolsMouseEventHandlers.js","features/nodes/Nodes.jsx","shared/Container.js","shared/TitleHeader.js","shared/FullscreenFlexContainer.js","shared/Slider.js","shared/Label.js","shared/InlineFlex.js","features/tools/AnimationSpeedSlider.jsx","features/tools/AlgorithmPicker.jsx","shared/Button.js","features/tools/SelectedDrawToolButton.jsx","features/tools/DrawToolPicker.jsx","features/tools/ToolBar.jsx","features/tools/FullscreenButton.jsx","features/nodes/usePathfinding.js","features/tools/OperationsPanel.jsx","app/App.js","serviceWorker.js","app/store.js","index.js"],"names":["GridContainer","styled","div","props","columns","rows","GridWrapper","aspectRatio","ResizeWindow","fullscreen","screen","window","width","calculatedWidth","height","css","ResizableGrid","resizeWindowRef","useRef","useEffect","current","style","ref","scaleKeyframe","keyframes","visitedNodeKeyframe","NodeTypes","empty","wall","visited","result","start","end","toolTypes","Set","isToolType","type","has","nodeTypeColor","nodeTypeStyle","Square","span","attrs","delay","gridColumnStart","x","gridRowStart","y","gridColumnEnd","gridRowEnd","transitionDelay","animationDelay","React","memo","animationFrameTime","onMouseDown","onMouseOver","node","useSelector","nodes","visitedIndex","createNode","areEqual","node1","node2","neighbors","Math","abs","isStartOrEndNode","startNode","endNode","distance","a","b","sqrt","pow","pathfindingState","defaultState","cols","Array","fill","map","_","row","col","createEmptyNodes","middleY","floor","length","middleX","pathfinding","initNodesState","nodesSlice","createSlice","name","initialState","reducers","changeColumns","state","payload","changeRows","startPathfinding","endPathfinding","setNodesType","action","setNodesTypeReady","forEach","stateNode","setNodesTypeRunning","clearNodesCase","setNodesTypeDone","clearNodes","resetNodes","actions","reducer","changedNode","oldX","oldY","newX","newY","stateNodes","dijkstraHeuristic","comparer","distanceFromStart","addHeuristics","Infinity","previousNode","currentNode","testedNode","calculatedDistance","min","endCondition","aStartHeuristic","combinedDistance","distanceToEnd","ceil","calculatedDistanceFromStart","calculatedCombinedDistance","greedyHeuristic","Number","MAX_SAFE_INTEGER","isStartNode","basicAStar","heuristic","flatNodes","flat","filter","unvisited","i","sort","shift","push","find","n","aStar","dijkstra","greedy","algorithmId","pathfindingAlgorithm","drawTool","toolsSlice","enterFullscreen","exitFullscreen","setAnimationFrameTime","setPathfindingAlgorithm","setDrawTool","toolType","mouseButtonCodes","setInternalDrawToolAndDispatch","dispatch","drawToolRef","useDrawToolsMouseEventHandlers","mousePressedRef","draggingRef","tools","onMouseDownOnNode","useCallback","onMouseOverNode","handleMouseDown","e","button","handleMouseUp","Nodes","useDispatch","rowsIndices","keys","columnsIndices","onMouseDownCapture","onMouseUp","onContextMenu","preventDefault","key","Container","TitleHeader","h1","FullscreenFlexContainer","top","right","left","bottom","zIndex","Slider","input","disabled","Label","label","InlineFlex","direction","AnimationSpeedSlider","useState","internalAnimationTime","setInternalAnimationTime","isReady","htmlFor","id","value","max","step","onChange","target","onBlur","Select","select","Option","option","isSelected","AlgorithmPicker","selectedAlgorithm","Object","entries","Button","primary","children","selected","SelectedDrawToolButton","selectedDrawToolType","backgroundColor","maxWidth","margin","DrawToolPicker","from","aria-label","onClick","ToolBar","hovered","setHovered","focused","setFocused","onMouseEnter","onMouseLeave","onFocus","enterFullscreenThunk","document","getElementById","requestFullscreen","exitFullscreenThunk","FullscreenButton","position","usePathfinding","algorithm","resultTimeout","setTimeout","clearTimeout","OperationsPanel","mapAlgorithmIdToFunc","cancel","App","Boolean","location","hostname","match","nodesReducer","toolsReducer","configureStore","ReactDOM","render","StrictMode","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d4b000f.chunk.js","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(\n    ${(props) => props.columns},\n    calc(100% / ${(props) => props.columns})\n  );\n  grid-template-rows: repeat(\n    ${(props) => props.rows},\n    calc(100% / ${(props) => props.rows})\n  );\n  justify-content: center;\n  position: absolute;\n  top: 0;\n\n  margin: 0 auto;\n  user-select: none;\n\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n`;\n\nconst GridWrapper = styled.div`\n  position: relative;\n  padding-bottom: ${(props) => props.aspectRatio}%;\n  width: 100%;\n`;\n\nconst ResizeWindow = styled.div`\n  margin: 0 auto;\n  min-width: ${(props) => props.columns * 6}px;\n  max-width: 100%;\n  background: var(--empty-node-clr);\n  border-radius: 10px;\n  overflow: hidden;\n  resize: horizontal;\n  border: 3px solid black;\n  ${(props) => {\n    if (!props.fullscreen) {\n      return;\n    }\n    const { screen } = window;\n    const { width, height } = screen;\n    const calculatedWidth =\n      height > width ? '100vmin' : `${props.aspectRatio}vmax`;\n    return css`\n      left: calc((100vw - ${calculatedWidth}) / 2);\n      top: 0;\n      position: absolute;\n      max-width: ${calculatedWidth};\n    `;\n  }}\n`;\n\nexport default function ResizableGrid(props) {\n  const resizeWindowRef = useRef(null);\n\n  useEffect(() => {\n    // override resized width on fullscreen toggle\n    resizeWindowRef.current.style.width = '100%';\n  }, [props.fullscreen]);\n\n  const aspectRatio = (props.rows / props.columns) * 100;\n  return (\n    <ResizeWindow\n      ref={resizeWindowRef}\n      fullscreen={props.fullscreen}\n      aspectRatio={aspectRatio}\n      columns={props.columns}\n    >\n      <GridWrapper aspectRatio={aspectRatio}>\n        <GridContainer {...props} />\n      </GridWrapper>\n    </ResizeWindow>\n  );\n}\n","import { keyframes } from 'styled-components';\n\nexport const scaleKeyframe = keyframes`\n  0% {\n    transform: scale(1.4, 1.4);\n    z-index: 2;\n  }\n  100%{\n    transform: scale(1, 1);\n    z-index: 0;\n  }\n`;\n\nexport const visitedNodeKeyframe = keyframes`\n  0% {\n    background-color: var(--visited-start-clr);\n    transform: scale(0.4, 0.4);\n    border-radius: 100%;\n    z-index: 2;\n  }\n  50% {\n    background-color: var(--visited-progress-clr);\n    transform: scale(1, 1);\n    border-radius: 0;\n    z-index: 2;\n  }\n  100% {\n    background-color: var(--visited-node-clr);\n    z-index: 0;\n  }\n`;\n","import { scaleKeyframe, visitedNodeKeyframe } from '../../shared/Keyframes';\nimport { css } from 'styled-components';\n\nconst NodeTypes = {\n  empty: 'empty_node',\n  wall: 'wall_node',\n  visited: 'visited_node',\n  result: 'result_node',\n  start: 'start_node',\n  end: 'end_node',\n};\n\nexport const changeableTypes = new Set([\n  NodeTypes.empty,\n  NodeTypes.wall,\n  NodeTypes.visited,\n  NodeTypes.result,\n]);\n\nexport const toolTypes = new Set([\n  NodeTypes.empty,\n  NodeTypes.wall,\n  NodeTypes.start,\n  NodeTypes.end,\n]);\n\nexport function isChangeableType(type) {\n  return changeableTypes.has(type);\n}\n\nexport function isToolType(type) {\n  return toolTypes.has(type);\n}\n\nexport const nodeTypeColor = {\n  [NodeTypes.empty]: 'var(--empty-node-clr)',\n  [NodeTypes.wall]: 'var(--wall-node-clr)',\n  [NodeTypes.visited]: 'var(--visited-node-clr)',\n  [NodeTypes.result]: 'var(--result-node-clr)',\n  [NodeTypes.start]: 'var(--start-node-clr)',\n  [NodeTypes.end]: 'var(--end-node-clr)',\n};\n\nexport const nodeTypeStyle = {\n  [NodeTypes.empty]: '',\n  [NodeTypes.wall]: css`\n    background: ${nodeTypeColor[NodeTypes.wall]};\n    animation: ${scaleKeyframe} 0.2s linear;\n  `,\n  [NodeTypes.visited]: css`\n    background: ${nodeTypeColor[NodeTypes.visited]};\n    animation: ${visitedNodeKeyframe} 1.4s linear;\n  `,\n  [NodeTypes.result]: css`\n    background: ${nodeTypeColor[NodeTypes.result]};\n    animation: ${scaleKeyframe} 0.3s linear;\n    transition: background-color 0.5s;\n  `,\n  [NodeTypes.start]: css`\n    background: ${nodeTypeColor[NodeTypes.start]};\n    box-shadow: 0px 0px 10px 5px rgba(9, 135, 0, 1);\n    z-index: 3;\n  `,\n  [NodeTypes.end]: css`\n    background: ${nodeTypeColor[NodeTypes.end]};\n    box-shadow: 0px 0px 10px 5px rgba(252, 3, 3, 1);\n    z-index: 3;\n  `,\n};\n\nexport default NodeTypes;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { nodeTypeStyle } from './NodeTypes';\n\nconst Square = styled.span.attrs(({ delay, x, y }) => ({\n  style: {\n    gridColumnStart: x + 1,\n    gridRowStart: y + 1,\n    gridColumnEnd: 'span 1',\n    gridRowEnd: 'span 1',\n    transitionDelay: `${delay}ms`,\n    animationDelay: `${delay}ms`,\n  },\n}))`\n  width: fill;\n  height: fill;\n  border: 1px solid var(--secondary-clr);\n\n  ${(props) => nodeTypeStyle[props.type]}\n`;\n\nconst Node = ({ animationFrameTime, x, y, onMouseDown, onMouseOver }) => {\n  const node = useSelector(({ nodes }) => nodes.nodes[y][x]);\n\n  const handleMouseDown = () => onMouseDown(node);\n  const handleMouseOver = () => onMouseOver(node);\n\n  return (\n    <Square\n      delay={node.visitedIndex * animationFrameTime}\n      type={node.type}\n      x={node.x}\n      y={node.y}\n      onMouseDown={handleMouseDown}\n      onMouseOver={handleMouseOver}\n    />\n  );\n};\n\nexport default React.memo(Node);\n","import NodeTypes, { isChangeableType, isToolType } from './NodeTypes';\n\nexport function createEmptyNodes(cols, rows) {\n  return Array(rows)\n    .fill(0)\n    .map((_, row) =>\n      Array(cols)\n        .fill(0)\n        .map((_, col) => createNode(col, row))\n    );\n}\n\nexport function createNode(x, y, type = NodeTypes.empty) {\n  return { x, y, type, visitedIndex: null };\n}\n\nexport function areEqual(node1, node2) {\n  if (!node1 || !node2) {\n    return false;\n  }\n  return node1.x === node2.x && node1.y === node2.y;\n}\n\nexport function neighbors(node1, node2) {\n  const xDistance = Math.abs(node1.x - node2.x);\n  const yDistance = Math.abs(node1.y - node2.y);\n  return xDistance + yDistance === 1;\n}\n\nexport function validateNodeTypeChange(node, newType) {\n  return validateNodeChange(node) && isChangeableType(newType);\n}\nexport function validateNodeChange(node) {\n  return !node.type === NodeTypes.start && !node.type === NodeTypes.end;\n}\n\nexport function isStartOrEndNode(node, startNode, endNode) {\n  return areEqual(node, startNode) || areEqual(node, endNode);\n}\n\nexport function distance(a, b) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nexport function clearNotToolNodes(nodes) {\n  return nodes.map((row) =>\n    row.map((node) => {\n      if (!isToolType(node.type)) {\n        return createNode(node.x, node.y, NodeTypes.empty);\n      }\n      return node;\n    })\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport { createEmptyNodes, isStartOrEndNode, clearNotToolNodes } from './nodeHelpers';\nimport NodeTypes from './NodeTypes';\n\n\n// Default state\nconst COLS = 40;\nconst ROWS = 30;\n\nexport const pathfindingState = {\n  ready: 'ready',\n  running: 'running',\n  done: 'done'\n};\n\nfunction initNodesState(cols, rows) {\n  const nodes = createEmptyNodes(cols, rows);\n  const middleY = Math.floor(nodes.length / 2);\n  const middleX = Math.floor(nodes[0].length / 2);\n\n  const startNode = { y: middleY, x: middleX };\n  const endNode = { y: Math.floor(middleY / 2), x: middleX };\n  nodes[startNode.y][startNode.x].type = NodeTypes.start;\n  nodes[endNode.y][endNode.x].type = NodeTypes.end;\n\n  return {\n    columns: cols,\n    rows,\n    nodes,\n    startNode,\n    endNode,\n    pathfinding: pathfindingState.ready,\n  };\n}\n\nconst defaultState = initNodesState(COLS, ROWS);\n\nconst nodesSlice = createSlice({\n  name: 'nodes',\n  initialState: defaultState,\n  reducers: {\n    changeColumns: (state, { payload }) => { state.columns = payload; },\n    changeRows: (state, { payload }) => { state.rows = payload; },\n    startPathfinding: (state) => {\n      if (state.pathfinding === pathfindingState.ready) {\n        state.pathfinding = pathfindingState.running;\n      }\n    },\n    endPathfinding: (state) => {\n      if (state.pathfinding === pathfindingState.running) {\n        state.pathfinding = pathfindingState.done;\n      }\n    },\n    setNodesType: (state, action) => {\n      switch (state.pathfinding) {\n        case pathfindingState.ready: setNodesTypeReady(state, action); break;\n        case pathfindingState.running: setNodesTypeRunning(state, action); break;\n        case pathfindingState.done: setNodesTypeDone(state, action); break;\n        default: break;\n      }\n    },\n    clearNodes: clearNodesCase,\n    resetNodes: () => defaultState\n  }\n});\n\nconst { actions, reducer } = nodesSlice;\nexport const {\n  changeColumns,\n  changeRows,\n  startPathfinding,\n  endPathfinding,\n  setNodesType,\n  clearNodes,\n  resetNodes,\n} = actions;\nexport default reducer;\n\nfunction clearNodesCase(state) {\n  state.nodes = clearNotToolNodes(state.nodes);\n  state.pathfinding = pathfindingState.ready;\n}\n\nfunction setNodesTypeReady(state, { payload }) {\n  const { nodes, type } = payload;\n  const { startNode, endNode } = state;\n\n  switch (type) {\n    case NodeTypes.start:\n    case NodeTypes.end: {\n      // there can only be one start and one end node\n      if (nodes.length !== 1) {\n        return;\n      }\n\n      const node = nodes[0];\n      if (isStartOrEndNode(node, startNode, endNode)) {\n        return;\n      }\n\n      const changedNode = type === NodeTypes.start ? startNode : endNode;\n\n      const { x: oldX, y: oldY } = changedNode;\n      state.nodes[oldY][oldX].type = NodeTypes.empty;\n\n      const { x: newX, y: newY } = node;\n\n      changedNode.x = newX;\n      changedNode.y = newY;\n      state.nodes[newY][newX].type = type;\n      break;\n    }\n    case NodeTypes.empty:\n    case NodeTypes.wall: {\n      const { nodes: stateNodes } = state;\n      nodes.forEach(node => {\n        if (isStartOrEndNode(node, startNode, endNode)) {\n          return;\n        }\n        stateNodes[node.y][node.x].type = type;\n      });\n      break;\n    }\n    default: break;\n  }\n}\n\nfunction setNodesTypeRunning(state, { payload }) {\n  const { nodes, type } = payload;\n  const { startNode, endNode } = state;\n\n  switch (type) {\n    case NodeTypes.visited:\n    case NodeTypes.result: {\n      nodes.forEach(node => {\n        if (isStartOrEndNode(node, startNode, endNode)) {\n          return;\n        }\n        const stateNode = state.nodes[node.y][node.x];\n        stateNode.type = type;\n        stateNode.visitedIndex = node.visitedIndex;\n\n        if (type === NodeTypes.result) {\n          state.pathfinding = pathfindingState.done;\n        }\n      });\n      break;\n    }\n    default: break;\n  }\n}\n\nfunction setNodesTypeDone(state, action) {\n  clearNodesCase(state);\n  setNodesTypeReady(state, action);\n}","import NodeTypes from '../../features/nodes/NodeTypes';\nimport { neighbors, distance } from '../../features/nodes/nodeHelpers';\n\nexport const dijkstraHeuristic = {\n  comparer: (a, b) => a.distanceFromStart - b.distanceFromStart,\n  addHeuristics: (nodes, startNode, endNode) => nodes.map(node => ({\n    ...node,\n    distanceFromStart: node.type === NodeTypes.start ? 0 : Infinity,\n    previousNode: null\n  })),\n  map: (currentNode, testedNode) => {\n    const calculatedDistance = currentNode.distanceFromStart + 1;\n    return neighbors(currentNode, testedNode) ?\n      {\n        ...testedNode,\n        distanceFromStart: Math.min(testedNode.distanceFromStart, calculatedDistance),\n        previousNode: testedNode.distanceFromStart > calculatedDistance ? currentNode : testedNode.previousNode\n      }\n      :\n      testedNode;\n  },\n  endCondition: (currentNode) => currentNode.distanceFromStart === Infinity\n};\n\nexport const aStartHeuristic = {\n  comparer: (a, b) => a.combinedDistance - b.combinedDistance,\n  addHeuristics: (nodes, startNode, endNode) => nodes.map(node => {\n    const isStartNode = node.type === NodeTypes.start;\n    const distanceFromStart = isStartNode ? 0 : Infinity;\n    const distanceToEnd = Math.ceil(distance(node, endNode));\n    return {\n      ...node,\n      distanceFromStart,\n      distanceToEnd,\n      combinedDistance: distanceFromStart + distanceToEnd,\n      previousNode: null\n    }\n  }),\n  map: (currentNode, testedNode) => {\n    const calculatedDistanceFromStart = currentNode.distanceFromStart + 1;\n    const calculatedCombinedDistance = calculatedDistanceFromStart + testedNode.distanceToEnd;\n    return neighbors(currentNode, testedNode) ?\n      {\n        ...testedNode,\n        distanceFromStart: Math.min(testedNode.distanceFromStart, calculatedDistanceFromStart),\n        combinedDistance: Math.min(testedNode.combinedDistance, calculatedCombinedDistance),\n        previousNode: testedNode.distanceFromStart > calculatedCombinedDistance ? currentNode : testedNode.previousNode\n      }\n      :\n      testedNode;\n  },\n  endCondition: (currentNode) => currentNode.combinedDistance === Infinity\n}\n\nexport const greedyHeuristic = {\n  comparer: (a, b) => {\n    const aMetric = a.visited ? a.distanceToEnd : Number.MAX_SAFE_INTEGER;\n    const bMetric = b.visited ? b.distanceToEnd : Number.MAX_SAFE_INTEGER;\n    return aMetric - bMetric;\n  },\n  addHeuristics: (nodes, startNode, endNode) => nodes.map(node => {\n    const isStartNode = node.type === NodeTypes.start;\n    const distanceToEnd = Math.ceil(distance(node, endNode));\n    return {\n      ...node,\n      distanceToEnd,\n      visited: isStartNode,\n      previousNode: null\n    }\n  }),\n  map: (currentNode, testedNode) => {\n    return neighbors(currentNode, testedNode)\n      ? {\n        ...testedNode,\n        visited: true,\n        previousNode: currentNode\n      }\n      : testedNode;\n  },\n  endCondition: (currentNode) => !currentNode.visited\n}","import NodeTypes from \"../../features/nodes/NodeTypes\";\nimport { aStartHeuristic } from \"./heuristics\";\n\nexport function basicAStar(nodes, startNode, endNode, heuristic) {\n\n  const visited = [];\n  const flatNodes = nodes.flat().filter(node => node.type !== NodeTypes.wall);\n\n  let unvisited = heuristic.addHeuristics(flatNodes, startNode, endNode);\n\n  for (let i = 0; unvisited.length !== 0; i++) {\n    unvisited.sort(heuristic.comparer);\n    const currentNode = unvisited[0];\n\n    // if lowest distance from start node in unvisited array equals Infinity\n    // it means there is no path from start to end, so we can end searching\n    if (heuristic.endCondition(currentNode)) {\n      return { visited, result: null };\n    }\n\n    unvisited.shift(); //remove current node\n    unvisited = unvisited.map(node =>\n      heuristic.map(currentNode, node)\n    );\n\n    visited.push({ ...currentNode, visitedIndex: i });\n    if (currentNode.type === NodeTypes.end) {\n      break;\n    }\n  }\n\n  const result = [];\n  const endNodeData = visited.find(n => n.type === NodeTypes.end);\n  for (let i = 0, node = endNodeData.previousNode; node?.type !== NodeTypes.start; node = node.previousNode, i++) {\n    if (!node) {\n      return { visited, result };\n    }\n    result.push({ ...node, visitedIndex: i });\n  }\n\n  return { visited, result };\n}\n\nexport default function aStar(nodes, startNode, endNode) {\n  return basicAStar(nodes, startNode, endNode, aStartHeuristic);\n}","import { basicAStar } from './aStar';\nimport { dijkstraHeuristic } from './heuristics';\n\nexport default function dijkstra(nodes, startNode, endNode) {\n  return basicAStar(nodes, startNode, endNode, dijkstraHeuristic);\n}\n","import { basicAStar } from './aStar';\nimport { greedyHeuristic } from './heuristics';\n\nexport default function greedy(nodes, startNode, endNode) {\n  return basicAStar(nodes, startNode, endNode, greedyHeuristic);\n}\n","import aStar from './aStar';\nimport dijkstra from './dijkstra';\nimport greedy from './greedy';\n\nconst algorithmId = {\n  dijkstra: \"Dijkstra's\",\n  aStar: 'A*',\n  greedy: 'Greedy',\n};\n\nexport function mapAlgorithmIdToFunc(id) {\n  switch (id) {\n    case algorithmId.dijkstra:\n      return dijkstra;\n    case algorithmId.aStar:\n      return aStar;\n    case algorithmId.greedy:\n      return greedy;\n    default:\n      return;\n  }\n}\n\nexport default algorithmId;\n","import { createSlice } from '@reduxjs/toolkit';\nimport algorithmId from '../../util/algorithms/algorithmId';\nimport NodeTypes, { isToolType } from '../nodes/NodeTypes';\n\nconst initialState = {\n  fullscreen: false,\n  animationFrameTime: 20,\n  pathfindingAlgorithm: algorithmId.dijkstra,\n  drawTool: NodeTypes.wall\n};\n\nconst toolsSlice = createSlice({\n  name: 'tools',\n  initialState,\n  reducers: {\n    enterFullscreen: (state) => { state.fullscreen = true },\n    exitFullscreen: (state) => { state.fullscreen = false },\n    setAnimationFrameTime: (state, { payload }) => { state.animationFrameTime = payload; },\n    setPathfindingAlgorithm: (state, { payload }) => { state.pathfindingAlgorithm = payload; },\n    setDrawTool: (state, { payload }) => {\n      const toolType = payload;\n      if (!isToolType(toolType)) {\n        return;\n      }\n      state.drawTool = toolType;\n    },\n  }\n});\n\nconst { reducer, actions } = toolsSlice;\nexport const {\n  enterFullscreen,\n  exitFullscreen,\n  setAnimationFrameTime,\n  setPathfindingAlgorithm,\n  setDrawTool,\n} = actions;\nexport default reducer;","import { useRef, useEffect, useCallback } from 'react';\nimport { setNodesType } from '../nodes/nodesSlice';\nimport NodeTypes from '../nodes/NodeTypes';\nimport { setDrawTool } from './toolsSlice';\nimport { useSelector } from 'react-redux';\n\nconst mouseButtonCodes = {\n  leftClick: 0,\n  rightClick: 2,\n};\n\nconst setInternalDrawToolAndDispatch = (dispatch, drawToolRef, toolType) => {\n  drawToolRef.current = toolType;\n  dispatch(setDrawTool(toolType));\n};\n\nconst useDrawToolsMouseEventHandlers = (dispatch) => {\n  const mousePressedRef = useRef(false);\n  const draggingRef = useRef(false);\n\n  const drawTool = useSelector(({ tools }) => tools.drawTool);\n  const drawToolRef = useRef(drawTool);\n\n  useEffect(() => {\n    drawToolRef.current = drawTool;\n  }, [drawTool]);\n\n  const handleMouseDown = (e) => {\n    if (e.button === mouseButtonCodes.rightClick) {\n      setInternalDrawToolAndDispatch(dispatch, drawToolRef, NodeTypes.empty);\n    }\n    mousePressedRef.current = true;\n  };\n\n  const onLeftClickUp = () => {\n    // if left click is released\n    // and it was dragging start/end note\n    // set draw tool to wall type\n    draggingRef.current &&\n      setInternalDrawToolAndDispatch(dispatch, drawToolRef, NodeTypes.wall);\n    draggingRef.current = false;\n  };\n\n  const onRightClickUp = () => {\n    setInternalDrawToolAndDispatch(dispatch, drawToolRef, NodeTypes.wall);\n  };\n\n  const handleMouseUp = (e) => {\n    mousePressedRef.current = false;\n    switch (e.button) {\n      case mouseButtonCodes.leftClick:\n        onLeftClickUp();\n        break;\n      case mouseButtonCodes.rightClick:\n        onRightClickUp();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onMouseDownOnNode = useCallback(\n    (node) => {\n      if (node.type === NodeTypes.start || node.type === NodeTypes.end) {\n        setInternalDrawToolAndDispatch(dispatch, drawToolRef, node.type);\n        draggingRef.current = true;\n      } else {\n        dispatch(setNodesType({ nodes: [node], type: drawToolRef.current }));\n      }\n    },\n    [dispatch]\n  );\n\n  const onMouseOverNode = useCallback(\n    (node) => {\n      if (!mousePressedRef.current) {\n        return;\n      }\n      onMouseDownOnNode(node);\n    },\n    [onMouseDownOnNode]\n  );\n\n  return {\n    handleMouseDown,\n    handleMouseUp,\n    onMouseDownOnNode,\n    onMouseOverNode,\n  };\n};\n\nexport default useDrawToolsMouseEventHandlers;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ResizableGrid from '../../shared/ResizableGrid';\nimport Node from './Node';\nimport useDrawToolsMouseEventHandlers from '../tools/useDrawToolsMouseEventHandlers';\n\nconst Nodes = () => {\n  const columns = useSelector(({ nodes }) => nodes.columns);\n  const rows = useSelector(({ nodes }) => nodes.rows);\n\n  const animationFrameTime = useSelector(\n    ({ tools }) => tools.animationFrameTime\n  );\n  const fullscreen = useSelector(({ tools }) => tools.fullscreen);\n\n  const dispatch = useDispatch();\n\n  const {\n    handleMouseDown,\n    handleMouseUp,\n    onMouseDownOnNode,\n    onMouseOverNode,\n  } = useDrawToolsMouseEventHandlers(dispatch);\n\n  const rowsIndices = [...Array(rows).keys()];\n  const columnsIndices = [...Array(columns).keys()];\n\n  return (\n    <ResizableGrid\n      fullscreen={fullscreen}\n      columns={columns}\n      rows={rows}\n      onMouseDownCapture={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onContextMenu={(e) => e.preventDefault()}\n    >\n      {rowsIndices.map((y) =>\n        columnsIndices.map((x) => (\n          <Node\n            key={`${x}_${y}`}\n            x={x}\n            y={y}\n            animationFrameTime={animationFrameTime}\n            onMouseDown={onMouseDownOnNode}\n            onMouseOver={onMouseOverNode}\n          />\n        ))\n      )}\n    </ResizableGrid>\n  );\n};\n\nexport default Nodes;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  width: 60%;\n  max-width: 1920px;\n  text-align: center;\n  border-radius: 10px;\n\n  @media (max-width: 1024px) {\n    width: 80%;\n  }\n\n  @media (max-width: 425px) {\n    width: 95%;\n  }\n\n  @media (max-width: 320px) {\n    width: 100%;\n  }\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst TitleHeader = styled.h1`\n  font-size: 3rem;\n  color: var(--text-clr);\n  -webkit-text-stroke: 2px black;\n  margin-bottom: 0.2em;\n`;\n\nexport default TitleHeader;\n","import styled, { css } from 'styled-components';\n\nconst FullscreenFlexContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  align-items: center;\n\n  font-size: var(--clamped-font-size);\n  padding: 0.4em;\n  margin: 0.8em 0;\n\n  color: var(--light-text-clr);\n  background-color: var(--light-background-clr);\n  border-radius: 10px;\n  border: 3px solid black;\n\n  & > * {\n    margin: 0;\n  }\n\n  ${(props) =>\n    props.fullscreen &&\n    css`\n      & > * {\n        width: 100%;\n        margin: 0 !important;\n      }\n\n      & > * + * {\n        margin-top: 0.4em !important;\n      }\n\n      flex-direction: column;\n\n      position: fixed;\n      top: ${props.top};\n      right: ${props.right};\n      left: ${props.left};\n      bottom: ${props.bottom};\n      z-index: ${props.zIndex};\n      margin: 0.4rem;\n    `}\n`;\n\nexport default FullscreenFlexContainer;\n","import styled from 'styled-components';\n\nconst Slider = styled.input.attrs(() => ({\n  type: 'range',\n}))`\n  width: 90%;\n  padding: 0.8em;\n\n  overflow: hidden;\n  appearance: none;\n  background-color: var(--empty-node-clr);\n  border: 3px solid black;\n  border-radius: 10px;\n\n  opacity: ${(props) => (props.disabled ? 0.3 : 1)};\n\n  &::-webkit-slider-thumb {\n    appearance: none;\n    cursor: ew-resize;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;\n    border: 1px solid black;\n    background: var(--primary-clr);\n  }\n\n  &::-moz-range-thumb {\n    appearance: none;\n    cursor: ew-resize;\n    width: 16px;\n    height: 16px;\n    background: var(--primary-clr);\n    border-radius: 100%;\n    border: 1px solid black;\n  }\n\n  &::-ms-thumb {\n    appearance: none;\n    cursor: ew-resize;\n    width: 16px;\n    height: 16px;\n    background: var(--primary-clr);\n    border-radius: 100%;\n    border: 1px solid black;\n  }\n\n  &::-webkit-slider-runnable-track {\n    background-color: var(--visited-node-clr);\n    border-radius: 10px;\n    border: 1px solid black;\n  }\n\n  &::-moz-range-progress {\n    background-color: var(--visited-node-clr);\n  }\n\n  &::-ms-fill-lower {\n    background-color: var(--visited-node-clr);\n  }\n`;\n\nexport default Slider;\n","import styled from 'styled-components';\n\nconst Label = styled.label`\n  color: var(--light-text-clr);\n`;\n\nexport default Label;\n","import styled from 'styled-components';\n\nconst InlineFlex = styled.span`\n  display: inline-flex;\n  flex-direction: ${(props) => props.direction};\n  justify-content: center;\n  align-items: center;\n  max-width: 450px;\n  max-height: 100%;\n  font-size: var(--clamped-font-size);\n  flex: 1 1 60px;\n`;\n\nexport default InlineFlex;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setAnimationFrameTime } from './toolsSlice';\nimport { pathfindingState } from '../nodes/nodesSlice';\nimport Slider from '../../shared/Slider';\nimport Label from '../../shared/Label';\nimport InlineFlex from '../../shared/InlineFlex';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst AnimationSpeedSlider = () => {\n  const animationFrameTime = useSelector(\n    ({ tools }) => tools.animationFrameTime\n  );\n  const state = useSelector(({ nodes }) => nodes.pathfinding);\n  const dispatch = useDispatch();\n  const [internalAnimationTime, setInternalAnimationTime] = useState(\n    animationFrameTime\n  );\n\n  useEffect(() => {\n    setInternalAnimationTime(animationFrameTime);\n  }, [animationFrameTime]);\n\n  const handleChange = (e) => {\n    setInternalAnimationTime(e.target.value);\n  };\n  const handleBlur = () => {\n    internalAnimationTime !== animationFrameTime &&\n      dispatch(setAnimationFrameTime(internalAnimationTime));\n  };\n\n  const isReady = state === pathfindingState.ready;\n  return (\n    <InlineFlex direction='column'>\n      <Label htmlFor={'animation-speed-range'}>\n        Animation: {internalAnimationTime}ms\n      </Label>\n      <Slider\n        id={'animation-speed-range'}\n        value={internalAnimationTime}\n        disabled={!isReady}\n        min={0}\n        max={250}\n        step={10}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </InlineFlex>\n  );\n};\n\nexport default AnimationSpeedSlider;\n","import React from 'react';\nimport algorithmId from '../../util/algorithms/algorithmId';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setPathfindingAlgorithm } from './toolsSlice';\nimport styled from 'styled-components';\nimport InlineFlex from '../../shared/InlineFlex';\nimport Label from '../../shared/Label';\n\nconst Select = styled.select`\n  width: 90%;\n  color: var(--text-clr);\n  border-radius: 5px;\n  border: 3px solid black;\n  font-size: inherit;\n  padding: 0.2em 0.4em;\n  background-color: var(--empty-node-clr);\n`;\n\nconst Option = styled.option`\n  background-color: ${(props) =>\n    props.isSelected ? 'var(--empty-node-clr)' : 'var(--background-clr)'};\n`;\n\nconst AlgorithmPicker = () => {\n  const selectedAlgorithm = useSelector(\n    ({ tools }) => tools.pathfindingAlgorithm\n  );\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    dispatch(setPathfindingAlgorithm(e.target.value));\n  };\n  return (\n    <InlineFlex direction='column'>\n      <Label htmlFor={'algorithm-select'}>Algorithm</Label>\n      <Select\n        id={'algorithm-select'}\n        onChange={handleChange}\n        value={selectedAlgorithm}\n      >\n        {Object.entries(algorithmId).map(([key, value]) => (\n          <Option\n            key={key}\n            value={value}\n            isSelected={selectedAlgorithm === value}\n          >\n            {value}\n          </Option>\n        ))}\n      </Select>\n    </InlineFlex>\n  );\n};\n\nexport default AlgorithmPicker;\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  border-radius: 10px;\n  background-color: ${(props) =>\n    props.primary ? 'var(--primary-clr)' : 'var(--secondary-clr)'};\n  font-size: var(--clamped-font-size);\n  color: var(--light-text-clr);\n  padding: ${(props) => (props.children ? '.5em .75em' : '.75em')};\n  text-align: center;\n  margin: 0.4rem;\n  border: 2px solid black;\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 0.25s, transform 0.25s;\n\n  ${(props) =>\n    props.selected &&\n    css`\n      opacity: 1;\n      transform: scale(1.2, 1.2);\n      border-color: var(--secondary-clr);\n    `}\n\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport default Button;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Button from '../../shared/Button';\nimport { nodeTypeColor } from '../nodes/NodeTypes';\n\nconst SelectedDrawToolButton = () => {\n  const selectedDrawToolType = useSelector(({ tools }) => tools.drawTool);\n  return (\n    <Button\n      selected={true}\n      style={{\n        backgroundColor: nodeTypeColor[selectedDrawToolType],\n        maxWidth: '.75em',\n        margin: '.2em .4em',\n      }}\n    />\n  );\n};\n\nexport default SelectedDrawToolButton;\n","import React from 'react';\nimport { toolTypes, nodeTypeColor } from '../nodes/NodeTypes';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setDrawTool } from '../tools/toolsSlice';\nimport InlineFlex from '../../shared/InlineFlex';\nimport Button from '../../shared/Button';\n\nconst DrawToolPicker = () => {\n  const dispatch = useDispatch();\n  const selectedDrawToolType = useSelector(({ tools }) => tools.drawTool);\n\n  const boundSetToolType = (toolType) => dispatch(setDrawTool(toolType));\n\n  return (\n    <InlineFlex>\n      {Array.from(toolTypes).map((type) => (\n        <Button\n          aria-label={`${type} button`}\n          key={type}\n          onClick={() => boundSetToolType(type)}\n          selected={type === selectedDrawToolType}\n          style={{\n            backgroundColor: nodeTypeColor[type],\n            maxWidth: '.75em',\n            margin: '.2em',\n          }}\n        />\n      ))}\n    </InlineFlex>\n  );\n};\n\nexport default DrawToolPicker;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport FullscreenFlexContainer from '../../shared/FullscreenFlexContainer';\nimport AnimationSpeedSlider from './AnimationSpeedSlider';\nimport { useState } from 'react';\nimport AlgorithmPicker from './AlgorithmPicker';\nimport SelectedDrawToolButton from './SelectedDrawToolButton';\nimport DrawToolPicker from './DrawToolPicker';\n\nconst ToolBar = () => {\n  const [hovered, setHovered] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const fullscreen = useSelector(({ tools }) => tools.fullscreen);\n\n  return (\n    <FullscreenFlexContainer\n      fullscreen={fullscreen}\n      top={0}\n      right={0}\n      zIndex={100}\n      onMouseEnter={fullscreen ? () => setHovered(true) : null}\n      onMouseLeave={fullscreen ? () => setHovered(false) : null}\n      onFocus={fullscreen ? () => setFocused(true) : null}\n      onBlur={fullscreen ? () => setFocused(false) : null}\n    >\n      {!fullscreen || hovered || focused ? (\n        <>\n          <DrawToolPicker />\n          <AnimationSpeedSlider />\n          <AlgorithmPicker />\n        </>\n      ) : (\n        <SelectedDrawToolButton />\n      )}\n    </FullscreenFlexContainer>\n  );\n};\n\nexport default ToolBar;\n","import React from 'react';\nimport Button from '../../shared/Button';\nimport { enterFullscreen, exitFullscreen } from '../tools/toolsSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst enterFullscreenThunk = async (dispatch) => {\n  await document.getElementById('root').requestFullscreen();\n  dispatch(enterFullscreen());\n};\n\nconst exitFullscreenThunk = async (dispatch) => {\n  document.fullscreen && (await document.exitFullscreen());\n  dispatch(exitFullscreen());\n};\n\nconst FullscreenButton = () => {\n  const dispatch = useDispatch();\n  const fullscreen = useSelector(({ tools }) => tools.fullscreen);\n\n  const boundEnterFullscreen = () => {\n    dispatch(enterFullscreenThunk);\n  };\n\n  const boundExitFullscreen = () => {\n    dispatch(exitFullscreenThunk);\n  };\n\n  return (\n    <Button\n      onClick={fullscreen ? boundExitFullscreen : boundEnterFullscreen}\n      style={{\n        position: 'fixed',\n        maxWidth: 'none',\n        left: 0,\n        bottom: 0,\n        zIndex: '2',\n      }}\n    >\n      {fullscreen ? '❌' : '🔼'}\n    </Button>\n  );\n};\n\nexport default FullscreenButton;\n","import { useCallback, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport NodeTypes from './NodeTypes';\nimport { setNodesType, startPathfinding, endPathfinding } from './nodesSlice';\n\nconst usePathfinding = (\n  nodes,\n  startNode,\n  endNode,\n  algorithm,\n  animationFrameTime\n) => {\n  const dispatch = useDispatch();\n  const resultTimeout = useRef(null);\n\n  const pathfinding = useCallback(() => {\n    dispatch(startPathfinding());\n    const { visited, result } = algorithm(nodes, startNode, endNode);\n    visited &&\n      dispatch(setNodesType({ nodes: visited, type: NodeTypes.visited }));\n\n    resultTimeout.current = setTimeout(\n      () =>\n        dispatch(\n          result\n            ? setNodesType({\n                nodes: result,\n                type: NodeTypes.result,\n              })\n            : endPathfinding()\n        ),\n      animationFrameTime * visited.length\n    );\n  }, [algorithm, nodes, startNode, endNode, animationFrameTime, dispatch]);\n\n  const cancel = useCallback(() => clearTimeout(resultTimeout.current), [\n    resultTimeout,\n  ]);\n\n  return [pathfinding, cancel];\n};\n\nexport default usePathfinding;\n","import React from 'react';\nimport Button from '../../shared/Button';\nimport FullscreenFlexContainer from '../../shared/FullscreenFlexContainer';\nimport { clearNodes, resetNodes } from '../nodes/nodesSlice';\nimport usePathfinding from '../nodes/usePathfinding';\nimport { useDispatch } from 'react-redux';\nimport { pathfindingState } from '../nodes/nodesSlice';\nimport { useSelector } from 'react-redux';\nimport { mapAlgorithmIdToFunc } from '../../util/algorithms/algorithmId';\n\nconst OperationsPanel = () => {\n  const fullscreen = useSelector(({ tools }) => tools.fullscreen);\n\n  const nodes = useSelector(({ nodes }) => nodes.nodes);\n  const startNode = useSelector(({ nodes }) => nodes.startNode);\n  const endNode = useSelector(({ nodes }) => nodes.endNode);\n  const state = useSelector(({ nodes }) => nodes.pathfinding);\n  const algorithmId = useSelector(({ tools }) => tools.pathfindingAlgorithm);\n  const animationFrameTime = useSelector(\n    ({ tools }) => tools.animationFrameTime\n  );\n\n  const dispatch = useDispatch();\n\n  const algorithm = mapAlgorithmIdToFunc(algorithmId);\n  const [pathfinding, cancel] = usePathfinding(\n    nodes,\n    startNode,\n    endNode,\n    algorithm,\n    animationFrameTime\n  );\n\n  const startOnClick = () => pathfinding();\n  const clearOnClick = () => {\n    cancel();\n    dispatch(clearNodes());\n  };\n  const resetOnClick = () => {\n    cancel();\n    dispatch(resetNodes());\n  };\n\n  return (\n    <FullscreenFlexContainer\n      fullscreen={fullscreen}\n      bottom={0}\n      right={0}\n      zIndex={99}\n    >\n      {state === pathfindingState.ready ? (\n        <Button onClick={startOnClick} primary={false}>\n          Start\n        </Button>\n      ) : (\n        <Button onClick={clearOnClick} primary={true}>\n          Clear\n        </Button>\n      )}\n      <Button onClick={resetOnClick} primary={true}>\n        Reset\n      </Button>\n    </FullscreenFlexContainer>\n  );\n};\n\nexport default OperationsPanel;\n","import React from 'react';\nimport Nodes from '../features/nodes/Nodes.jsx';\nimport Container from '../shared/Container';\nimport TitleHeader from '../shared/TitleHeader';\nimport ToolBar from '../features/tools/ToolBar.jsx';\nimport FullscreenButton from '../features/tools/FullscreenButton.jsx';\nimport OperationsPanel from '../features/tools/OperationsPanel.jsx';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const fullscreen = useSelector(({ tools }) => tools.fullscreen);\n  return (\n    <Container>\n      {fullscreen || <TitleHeader>Pathfinding tool</TitleHeader>}\n      <ToolBar />\n      <Nodes />\n      <OperationsPanel />\n      <FullscreenButton />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport nodesReducer from '../features/nodes/nodesSlice';\nimport toolsReducer from '../features/tools/toolsSlice';\n\nconst reducer = {\n  nodes: nodesReducer,\n  tools: toolsReducer,\n};\n\nexport default configureStore({\n  reducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}